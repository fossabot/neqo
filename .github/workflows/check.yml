name: CI
on: [push, pull_request]
env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Build & test
    strategy:
      # fail-fast: false
      matrix:
        os: [windows-latest] # ubuntu-latest, macos-latest] #
        rust-toolchain: [stable] # , 1.65.0, beta]
    runs-on: ${{ matrix.os }}

    steps:
      # - name: Install Rust
      #   uses: actions-rust-lang/setup-rust-toolchain@v1
      #   with:
      #     toolchain: ${{ matrix.rust-toolchain }}
      #     components: rustfmt, clippy
      #     cache: false # enabling the cache leads to spurious failures

      # - name: Install dependencies (Linux)
      #   if: runner.os == 'Linux'
      #   env:
      #     DEBIAN_FRONTEND: noninteractive
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y --no-install-recommends gyp mercurial ninja-build

      # - name: Install dependencies (MacOS)
      #   if: runner.os == 'MacOS'
      #   run: |
      #     brew install ninja mercurial
      #     python3 -m pip install gyp-next
      #     echo "$(python3 -m site --user-base)/bin" >> $GITHUB_PATH


      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: nsinstall
      - shell: msys2 {0}
        run: |
          find /usr/bin  | grep nsinstall || true
          ls -l /usr/bin
          echo $PATH

      # - name: Install dependencies (Windows)
      #   if: runner.os == 'Windows'
      #   shell: bash
      #   run: |
      #     # choco install --no-progress MozillaBuild # python3
      #     python3 -m pip install gyp-next
      #     pacman -S make
      #     # echo "C:/mozilla-build/bin" >> $GITHUB_PATH
      #     # echo "C:/mozilla-build/msys2/usr/bin" >> $GITHUB_PATH
      #     # echo "MOZILLABUILD=C:/mozilla-build" >> $GITHUB_ENV
      #     # echo "MOZBUILD_STATE_PATH=C:/mozbuild-state" >> $GITHUB_ENV
      #     echo "OS_TARGET=WIN95" >> $GITHUB_ENV
      #     # echo "GYP_MSVS_OVERRIDE_PATH=C:/Program Files (x86)/Microsoft Visual Studio/2022/Community" >> $GITHUB_ENV

      - name: Fetch NSS and NSPR
        shell: bash
        run: |
          find /usr/bin  | grep nsinstall || true
          ls -l /usr/bin
          echo $PATH
          python3 -m pip install gyp-next
          hg clone https://hg.mozilla.org/projects/nspr "$NSPR_DIR"
          git clone --depth=1 https://github.com/nss-dev/nss "$NSS_DIR"
          # sed -i 's|mv -f $(DESTDIR)$(includedir)/$(MDCPUCFG_H).*||g' "$NSPR_DIR"/pr/include/md/Makefile.in
          "$NSS_DIR"/build.sh -v
        env:
          NSS_DIR: ${{ github.workspace }}/nss
          NSPR_DIR: ${{ github.workspace }}/nspr

      # - name: Checkout
      #   uses: actions/checkout@v4

      # - name: Build
      #   run: cargo +${{ matrix.rust-toolchain }} build -v --all-targets

      # - name: Run tests
      #   run: cargo +${{ matrix.rust-toolchain }} test -v
      #   env:
      #      RUST_BACKTRACE: 1
      #      RUST_LOG: neqo=debug

      # - name: Check formatting
      #   run: cargo +${{ matrix.rust-toolchain }} fmt --all -- --check
      #   if: ${{ success() || failure() }}

      # - name: Clippy
      #   run: cargo +${{ matrix.rust-toolchain }} clippy -v --tests -- -D warnings
      #   if: ${{ success() || failure() }}
