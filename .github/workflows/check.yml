name: CI
on: [push, pull_request]
env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Neqo Build and Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust-toolchain: [stable, 1.65.0]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Dependencies (Linux)
        if: runner.os == 'Linux'
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          # sudo apt-get update
          sudo apt-get install -y --no-install-recommends gyp ninja-build # git gyp mercurial ninja-build
      # - name: Install Dependencies (Windows)
      #   if: runner.os == 'Windows'
      #   run: |
      #     echo TBD
      - name: Install Dependencies (MacOS)
        if: runner.os == 'MacOS'
        run: |
          brew install ninja # mercurial git
          python3 -m pip install gyp-next
          export PATH="$(python3 -m site --user-base)/bin:$PATH"

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust-toolchain }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: cargo +${{ matrix.rust-toolchain }} build -v --tests

      - name: Run Tests
        run: cargo +${{ matrix.rust-toolchain }} test -v
        env:
           LD_LIBRARY_PATH: ${{ github.workspace }}/dist/Debug/lib
           RUST_BACKTRACE: 1
           RUST_LOG: neqo=debug

      - name: Check formatting
        run: cargo +${{ matrix.rust-toolchain }} fmt --all -- --check
        if: ${{ success() || failure() }}

      - name: Clippy
        run: cargo +${{ matrix.rust-toolchain }} clippy -v --tests -- -D warnings
        if: ${{ success() || failure() }}
