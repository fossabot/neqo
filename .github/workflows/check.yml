name: CI
on: [push, pull_request]
env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Neqo Build and Test
    env:
      RUSTFLAGS: -C link-arg=-fuse-ld=lld
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust-toolchain: [stable, 1.65.0]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Dependencies (Linux)
        if: runner.os == 'Linux'
        env:
          DEBIAN_FRONTEND: noninteractive
          llvm_version: 14
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            clang \
            coreutils \
            curl \
            git \
            gyp \
            libclang-dev \
            libssl-dev \
            lld \
            llvm-"$llvm_version" \
            llvm-"$llvm_version"-runtime \
            make \
            mercurial \
            ninja-build \
            pkg-config \
            ssh \
            zlib1g-dev \
            --no-install-recommends
          [ -d "/usr/lib/llvm-$llvm_version/lib" ]
          echo "LIBCLANG_DIR=/usr/lib/llvm-$llvm_version/lib" >> "$GITHUB_ENV"
      - name: Install Dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          echo TBD
      - name: Install Dependencies (MacOS)
        if: runner.os == 'MacOS'
        run: |
          brew install coreutils mercurial git ninja python3-pip
          python3 -m pip install gyp-next

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust-toolchain }}

      - name: Checkout
        uses: actions/checkout@v4

      # This step might be removed if the distro included a recent enough
      # version of NSS.  Ubuntu 20.04 only has 3.49, which is far too old.
      # (neqo-crypto/build.rs would also need to query pkg-config to get the
      # right build flags rather than building NSS.)
      - name: Fetch NSS and NSPR
        run: |
          hg clone https://hg.mozilla.org/projects/nspr "$NSPR_DIR"
          git clone --depth=1 https://github.com/nss-dev/nss "$NSS_DIR"
          echo "NSS_DIR=$NSS_DIR" >> "$GITHUB_ENV"
          echo "NSPR_DIR=$NSPR_DIR" >> "$GITHUB_ENV"
        env:
          NSS_DIR: ${{ github.workspace }}/nss
          NSPR_DIR: ${{ github.workspace }}/nspr

      - name: Build
        run: cargo +${{ matrix.rust-toolchain }} build -v --tests

      - name: Run Tests
        run: cargo +${{ matrix.rust-toolchain }} test -v
        env:
           LD_LIBRARY_PATH: ${{ github.workspace }}/dist/Debug/lib
           RUST_BACKTRACE: 1
           RUST_LOG: neqo=debug

      - name: Check formatting
        run: cargo +${{ matrix.rust-toolchain }} fmt --all -- --check
        if: ${{ success() || failure() }}

      - name: Clippy
        run: cargo +${{ matrix.rust-toolchain }} clippy -v --tests -- -D warnings
        if: ${{ success() || failure() }}
