name: CI
on: [push, pull_request]
env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Build & test
    strategy:
      # fail-fast: false
      matrix:
        # os: [windows-latest] # ubuntu-latest, macos-latest] #
        os: [ubuntu-latest, macos-latest]
        rust-toolchain: [1.65.0] #, stable, beta]
    runs-on: ${{ matrix.os }}
    defaults:
          run:
            shell: ${{ matrix.os == 'windows-latest' && 'msys2 {0}' || 'bash' }}

    steps:
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust-toolchain }}
          components: rustfmt, clippy
          cache: false # enabling the cache leads to spurious failures

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends gyp mercurial ninja-build

      - name: Install dependencies (MacOS)
        if: runner.os == 'MacOS'
        run: |
          brew install ninja mercurial
          python3 -m pip install gyp-next
          echo "$(python3 -m site --user-base)/bin" >> $GITHUB_PATH

      - name: Install MSYS2 dependencies (Windows)
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          install: nsinstall
          path-type: inherit

      - name: Install other dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          hg clone https://hg.mozilla.org/projects/nspr
          git config --global core.autocrlf false
          git clone --depth=1 https://github.com/nss-dev/nss
          sed -i 's/-w44996//' nss/lib/sqlite/Makefile
          make -C nss nss_build_all USE_64=1 NS_USE_GCC=1

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: cargo +${{ matrix.rust-toolchain }} build --all-targets

      - name: Run tests
        run: cargo +${{ matrix.rust-toolchain }} test
        env:
           RUST_BACKTRACE: 1
           RUST_LOG: neqo=debug

      - name: Check formatting
        if: success() || failure()
        run: cargo +${{ matrix.rust-toolchain }} fmt --all -- --check

      - name: Clippy
        if: success() || failure()
        run: cargo +${{ matrix.rust-toolchain }} clippy --tests -- -D warnings

      - name: Set up coverage
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Determine converage
        run: cargo +${{ matrix.rust-toolchain }} llvm-cov --all-features --lcov --output-path lcov.info

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
