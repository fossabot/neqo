name: CI
on: [push, pull_request]
env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Build & test
    strategy:
      # fail-fast: false
      matrix:
        os: [windows-latest] # ubuntu-latest, macos-latest] #
        rust-toolchain: [stable] # , 1.65.0, beta]
    runs-on: ${{ matrix.os }}
    # defaults:
    #       run:
    #         shell: ${{ matrix.os == 'windows-latest' && 'msys2 {0}' || 'bash' }}

    steps:
      # - name: Install Rust
      #   uses: actions-rust-lang/setup-rust-toolchain@v1
      #   with:
      #     toolchain: ${{ matrix.rust-toolchain }}
      #     components: rustfmt, clippy
      #     cache: false # enabling the cache leads to spurious failures

      # - name: Install dependencies (Linux)
      #   if: runner.os == 'Linux'
      #   env:
      #     DEBIAN_FRONTEND: noninteractive
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y --no-install-recommends gyp mercurial ninja-build

      # - name: Install dependencies (MacOS)
      #   if: runner.os == 'MacOS'
      #   run: |
      #     brew install ninja mercurial
      #     python3 -m pip install gyp-next
      #     echo "$(python3 -m site --user-base)/bin" >> $GITHUB_PATH

      - name: Install MSYS2 dependencies (Windows)
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          install: nsinstall # ninja python-six # gyp in msys2 is too old, install separately below
          # path-type: inherit

      - name: Install other dependencies (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          python3 -m pip install gyp-next
          echo "OS_TARGET=WIN95" >> $GITHUB_ENV
          # echo "GYP_MSVS_OVERRIDE_PATH=C:\Program Files\Microsoft Visual Studio\2022\Enterprise" >> $GITHUB_ENV
          # echo "GYP_MSVS_VERSION=2022" >> $GITHUB_ENV
          # echo "C:\Program Files\Microsoft Visual Studio\2022\Enterprise/VC/Tools/MSVC/14.38.33130/bin/Hostx64/x64" >> $GITHUB_PATH
          hg clone https://hg.mozilla.org/projects/nspr
          git clone --depth=1 https://github.com/nss-dev/nss

      - name: Build
        if: runner.os == 'Windows'
        # Nuke the MSYS2-installed /usr/bin/link.exe, see
        # https://anadoxin.org/blog/bringing-visual-studio-compiler-into-msys2-environment.html/
        run: |
          # rm /usr/bin/link.exe || true
          echo $nproc
          make -C nss nss_build_all USE_64=1 NS_USE_GCC=1 BUILD_OPT=1
          # nss/build.sh -v --msvc -Ddisable_tests=1 -Dsign_libs=0

      # - name: Checkout
      #   uses: actions/checkout@v4

      # - name: Build
      #   run: cargo +${{ matrix.rust-toolchain }} build -v --all-targets

      # - name: Run tests
      #   run: cargo +${{ matrix.rust-toolchain }} test -v
      #   env:
      #      RUST_BACKTRACE: 1
      #      RUST_LOG: neqo=debug

      # - name: Check formatting
      #   run: cargo +${{ matrix.rust-toolchain }} fmt --all -- --check
      #   if: ${{ success() || failure() }}

      # - name: Clippy
      #   run: cargo +${{ matrix.rust-toolchain }} clippy -v --tests -- -D warnings
      #   if: ${{ success() || failure() }}
